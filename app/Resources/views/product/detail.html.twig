{# @var product \AppBundle\Model\Product\Car #}

{% import 'product/macros.html.twig' as macros %}

{% extends 'layouts/layout.html.twig' %}

{% block content %}

        {% spaceless -%}
            {% do pimcore_inline_script().appendFile('https://code.jquery.com/jquery-3.3.1.slim.min.js',null,null,{ integrity:"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo",crossorigin:"anonymous"}) %}
        {%- endspaceless %}


    <div id="main-content" class="main-content">

        <div class="d-md-none mt-3">
            {% if(product.manufacturer and product.manufacturer.logo)  %}
                {{ product.manufacturer.logo.thumbnail('product_detail_manufacturer').getHTML({class: 'img-fluid float-right'})|raw }}
            {%  endif  %}
            <div class="page-header">
                <h1>{{ product.oSName }}</h1>
            </div>
        </div>

        <div class="bg-white my-3">
            <div class="row">

                <div class="col-md-6 mb-4">
                    {% if(product.mainImage) %}

                        <div class="p-3">
                            <a href="{{ product.mainImage.getThumbnail('galleryLightbox')|raw }}" class="thumbnail">
                                {{ product.mainImage.thumbnail('product_detail').getHTML({class: 'img-thumbnail1 img-fluid'})|raw }}
                            </a>

                            {% block additionalimages %}
                                {% set additionalImages = product.additionalImages %}
                                {%  if(additionalImages) %}

                                    <div class="row">

                                        {% for image in additionalImages %}

                                            <div class="col-4 mt-3">

                                                <a href="{{ image.getThumbnail('galleryLightbox')|raw }}" class="thumbnail">
                                                    {{ image.thumbnail('product_detail_small').getHTML({class: 'img-thumbnail1 img-fluid'})|raw }}
                                                </a>

                                            </div>

                                        {% endfor %}

                                    </div>

                                {%  endif %}
                            {% endblock %}
                        </div>
                    {% endif %}
                </div>

                <div class="col-md-6 mb-4">

                    <div class="p-3 pt-4">

                        <div class="row d-none d-md-block mb-3">
                            <div class="col-12">
                                {% if(product.manufacturer and product.manufacturer.logo)  %}
                                    {{ product.manufacturer.logo.thumbnail('product_detail_manufacturer').getHTML({class: 'img-fluid float-right'})|raw }}
                                {%  endif  %}

                                <h2 class="">{{ product.oSName }}</h2>
                            </div>
                        </div>
                        <div class="row">

                            {% block colorvariants %}
                                <dl class="item-property col-12">
                                    <dt>{{ 'general.color' | trans }}</dt>
                                    <dd>
                                        {% for colorVariant in product.colorVariants %}
                                            <a href="{{ app_product_detaillink(colorVariant) }}"
                                               class="btn {{ product.id == colorVariant.id ? 'btn-primary' : 'btn-outline-primary' }}">
                                                {{ colorVariant.color | colorname }}
                                            </a>
                                        {% endfor %}
                                    </dd>

                                </dl>
                            {% endblock %}

                            {% block detailinfos %}
                                {% if(product.bodyStyle) %}
                                    <dl class="item-property col-6">
                                        <dt>{{ 'general.body-style' | trans }}</dt>
                                        <dd>{{ product.bodyStyle.name }}</dd>
                                    </dl>
                                {% endif %}

                                <dl class="item-property col-6">
                                    <dt>{{ 'general.car-class' | trans }}</dt>
                                    <dd>{{ ('attribute.' ~ product.carClass) | lower | trans }}</dd>
                                </dl>
                            {% endblock %}

                        </div>

                        <hr/>

                    </div>

                </div>

            </div>

            <hr>

            {% block description %}
                <div class="mt-5 col-12 text-center">
                    <h4 class="text-center">{{ 'general.additional-information' | trans }}</h4>

                    {% if(product.description) %}
                        <p>{{ product.description | raw }}</p>
                    {% endif %}

                </div>
            {% endblock %}

            {% block graphs %}
                <div class="mt-5 col-12 text-center">
                    <h4 class="text-center">GRAPHS</h4>

		    {% set url = product.graphs_url %}
	    
                    {% if(url) %}

                        <p>{{ url }}</p>
                        
			<div class="row my-2">
		            <div class="col-md-4 py-1">
			        <div class="card">
	    		    	    <div class="card-body">
	            			<canvas id="myChart{{product.id}}"></canvas>
			            </div>
			        </div>
		            </div>
		            <div class="col-md-4 py-1">
		                <div class="card">
		                    <div class="card-body">
		                        <canvas id="myChart2"></canvas>
		                    </div>
		                </div>
		            </div>
		            <div class="col-md-4 py-1">
		        	<div class="card">
		            	    <div class="card-body">
		                	<canvas id="myChart3"></canvas>
		            	    </div>
		        	</div>
		    	    </div>
			</div>
			
			
			
			
			
{% block javascript_footer %}
{%- spaceless -%}
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.js"></script>
<script>
{# {%- pimcoreassetcompress -%} #}
var chartData = {
  labels: ["{{product.name}}", "M", "T", "W", "T", "F", "S"],
  datasets: [{
    data: [589, 445, 483, 503, 689, 692, 634],
  },
  {
    data: [639, 465, 493, 478, 589, 632, 674],
  }]
};
var chLine = document.getElementById("myChart{{product.id}}");
if (chLine) {
  new Chart(chLine, {
  type: 'line',
  data: chartData,
  options: {
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: false
        }
      }]
    },
    legend: {
      display: false
    }
  }
  });
}
var colors = ['rgba(255, 99, 132, 0.8)','#28a745','#333333','#c3e6cb','#dc3545','#6c757d'];
var chBar = document.getElementById("myChart2");
var chartData = {
  labels: ["S", "M", "T", "W", "T", "F", "S"],
  datasets: [{
    data: [589, 445, 483, 503, 689, 692, 634],
    backgroundColor: colors[0]
  },
  {
    data: [209, 245, 383, 403, 589, 692, 580],
    backgroundColor: colors[1]
  },
  {
    data: [489, 135, 483, 290, 189, 603, 600],
    backgroundColor: colors[2]
  },
  {
    data: [639, 465, 493, 478, 589, 632, 674],
    backgroundColor: colors[4]
  }]
};
if (chBar) {
  new Chart(chBar, {
  type: 'bar',
  data: chartData,
  options: {
    scales: {
      xAxes: [{
        barPercentage: 0.4,
        categoryPercentage: 0.5
      }],
      yAxes: [{
        ticks: {
          beginAtZero: false
        }
      }]
    },
    legend: {
      display: false
    }
  }
  });
}
var ctx = document.getElementById('myChart3');
var myChart3 = new Chart(ctx, {
  type: 'polarArea',
  data: {
    labels: ['Vultr', 'DigitalOcean', 'Cloudways', 'Bluehost'],
    datasets: [{
      label: 'Fully Loaded Time',
      data: [2.2, 2.6, 2.4, 4.3],
      backgroundColor: [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
      ],
      borderColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
      ],
      borderWidth: 1
    }]
  },
  options: {
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true
        }
      }]
    }
  }
}
);
///  Calling API and modeling data for each chart ///
const btcData = async () => {
  const response = await fetch('{{ url | raw }}');
  const json = await response.json();
  const data = json.Data.Data
  const times = data.map(obj => obj.time)
  const prices = data.map(obj => obj.high)
  return {
    times,
    prices
  }
}

/// Error handling ///
function checkStatus(response) {
  if (response.ok) {
    return Promise.resolve(response);
  } else {
    return Promise.reject(new Error(response.statusText));
  }
}

/// Charts ///
let createBtcChart
async function printBtcChart() {
  let { times, prices } = await btcData()
  let btcChart = document.getElementById('btcChart').getContext('2d');
  let gradient = btcChart.createLinearGradient(0, 0, 0, 400);
  gradient.addColorStop(0, 'rgba(247,147,26,.5)');
  gradient.addColorStop(.425, 'rgba(255,193,119,0)');
  Chart.defaults.global.defaultFontFamily = 'Red Hat Text';
  Chart.defaults.global.defaultFontSize = 12;

  createBtcChart = new Chart(btcChart, {
    type: 'line',
    data: {
      labels: times,
      datasets: [{
        label: '$',
        data: prices,
        backgroundColor: gradient,
        borderColor: 'rgba(247,147,26,1)',
        borderJoinStyle: 'round',
        borderCapStyle: 'round',
        borderWidth: 3,
        pointRadius: 0,
        pointHitRadius: 10,
        lineTension: .2,
      }]
    },

    options: {
      title: {
        display: false,
        text: 'Heckin Chart!',
        fontSize: 35
      },

      legend: {
        display: false
      },

      layout: {
        padding: {
          left: 0,
          right: 0,
          top: 0,
          bottom: 0
        }
      },

      scales: {
        xAxes: [{
          display: false,
          gridLines: {}
        }],
        yAxes: [{
          display: false,
          gridLines: {}
        }]
      },

      tooltips: {
        callbacks: {
          //This removes the tooltip title
          title: function() {}
       },
        //this removes legend color
        displayColors: false,
        yPadding: 10,
        xPadding: 10,
        position: 'nearest',
        caretSize: 10,
        backgroundColor: 'rgba(255,255,255,.9)',
        bodyFontSize: 15,
        bodyFontColor: '#303030' 
      }
    }
  });
}


/// Update current price ///
async function updateBitcoinPrice() {
  let { times, prices } = await btcData()
  let currentPrice = prices[prices.length-1].toFixed(2);

  document.getElementById("btcPrice").innerHTML = "$" + currentPrice;
}

updateBitcoinPrice()

printBtcChart()
{# {%- endpimcoreassetcompress -%} #}
</script>
{%- endspaceless -%}
{% endblock %}
			
                        
                    {% endif %}

                </div>
            {% endblock %}
            
            {% block attributes %}
                <div class="col-12">

                <ul class="nav nav-tabs" id="attributes" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">{{ 'general.general' | trans }}</a>
                    </li>
                    {% if(product.attributes.dimensions or product.attributes.bodywork) %}
                        <li class="nav-item">
                            <a class="nav-link" id="dimensions-tab" data-toggle="tab" href="#dimensions" role="tab" aria-controls="dimensions" aria-selected="false">{{ 'general.dimensions' | trans }}</a>
                        </li>
                    {% endif %}
                    {% if(product.attributes.engine or product.attributes.transmission) %}
                        <li class="nav-item">
                            <a class="nav-link" id="engine-tab" data-toggle="tab" href="#engine" role="tab" aria-controls="engine" aria-selected="false">{{ 'general.engine' | trans }}</a>
                        </li>
                    {%  endif %}
                        <li class="nav-item">
                            <a class="nav-link" id="heavy-tab" data-toggle="tab" href="#heavy" role="tab" aria-controls="heavy" aria-selected="false">{{ 'general.heavy' | trans }}</a>
                        </li>
                    
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">

                        <div class="m-3">

                            <div class="row">

                                {% if(product.manufacturer) %}
                                    <dl class="item-property col-6 col-md-3">
                                        <dt>{{ 'general.manufacturer' | trans }}</dt>
                                        <dd>{{ product.manufacturer.name }}</dd>
                                    </dl>
                                {% endif %}

                                {{ macros.attribute(product.productionYear, 'general.productionYear') }}

                                {% if(product.country) %}
                                    <dl class="item-property col-6 col-md-3">
                                        <dt>{{ 'general.country' | trans }}</dt>
                                        <dd>{{ product.country | country }}</dd>
                                    </dl>
                                {% endif %}

                            </div>

                        </div>

                    </div>
                    {% if(product.attributes.dimensions or product.attributes.bodywork) %}
                        <div class="tab-pane fade" id="dimensions" role="tabpanel" aria-labelledby="dimensions-tab">

                            <div class="m-3">

                                <div class="row">

                                    {% if(product.attributes.dimensions) %}
                                        {{ macros.attribute(product.attributes.dimensions.length, 'general.length') }}
                                        {{ macros.attribute(product.attributes.dimensions.width, 'general.width') }}
                                        {{ macros.attribute(product.attributes.dimensions.wheelbase, 'general.wheelbase') }}
                                        {{ macros.attribute(product.attributes.dimensions.weight, 'general.weight') }}
                                    {%  endif %}

                                    {% if(product.attributes.bodywork) %}
                                        {{ macros.attribute(product.attributes.bodywork.numberOfDoors, 'general.numberOfDoors') }}
                                        {{ macros.attribute(product.attributes.bodywork.numberOfSeats, 'general.numberOfSeats') }}
                                    {%  endif %}

                                </div>

                            </div>

                        </div>
                    {%  endif %}
                    {% if(product.attributes.engine or product.attributes.transmission) %}
                        <div class="tab-pane fade" id="engine" role="tabpanel" aria-labelledby="engine-tab">

                            <div class="m-3">

                                <div class="row">

                                    {% if(product.attributes.engine) %}
                                        {{ macros.attribute(product.attributes.engine.cylinders, 'general.cylinders') }}
                                        {{ macros.attribute(product.attributes.engine.capacity, 'general.capacity') }}
                                        {{ macros.attribute(product.attributes.engine.power, 'general.power') }}
                                        {{ macros.attribute(product.attributes.engine.engineLocation, 'general.engineLocation') }}
                                    {%  endif %}

                                    {% if(product.attributes.transmission) %}
                                        {{ macros.attribute(product.attributes.transmission.wheelDrive, 'general.wheelDrive', true, 'attribute.') }}
                                    {%  endif %}

                                </div>

                            </div>

                        </div>
                    {%  endif %}
                    
                        <div class="tab-pane fade" id="heavy" role="tabpanel" aria-labelledby="heavy-tab">

                            <div class="m-3">
                            
			        <div class="card">
	    		    	    <div class="card-body">
	            			<canvas id="btcChart"></canvas>
			            </div>
			        </div>
                            
                            </div>

                        </div>
                    
                </div>

            </div>
            {% endblock %}

            {% block productrelations %}
                {% set accessories = product.accessories %}

                {%  if(accessories.count) %}

                    <hr>

                    <div class="mt-5 col-12">
                        <h4 class="text-center">{{ 'general.accessories' | trans }}</h4>

                        <div class="row">
                            {% for item in accessories %}

                                <div class="col-md-3 d-flex align-items-stretch">
                                    {% include 'product/product_teaser.html.twig' with {'product': item} %}
                                </div>

                            {% endfor %}
                        </div>

                    </div>

                {% endif %}
            {% endblock %}


        </div>
    </div>
{% endblock %}
